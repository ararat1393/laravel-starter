<?php

namespace App\Models;

use App\Builders\PhotoBuilder;
use App\Traits\Validators;
use App\Validators\PhotoValidator;
use Illuminate\Database\Eloquent\Factories\HasFactory;

class Photo extends BaseModel
{
    use HasFactory, Validators;

    const PER_PAGE = 9;
    const STATUS_APPROVED = '1';
    const STATUS_PENDING = '0';

    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';

    /**
     * @return array
     */
    public function rules()
    {
        return [
            'name' => [
                'required',
                'min:3' => ['on'=>'create']
            ],
            'description' => ['sometimes','min:3'],
            'user_id' => ['required','exists:users,id'],
            'file' => [
                'required'=>['on'=>'create'],
                'sometimes'=>['on'=>'update'],
                'image','mimes:jpeg,png,jpg,gif,svg',
                'max:2048'
            ]
        ];
    }

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'link','user_name','name','description','status'
    ];

    /**
     * @param \Illuminate\Database\Query\Builder $query
     * @return PhotoBuilder
     */
    public function newEloquentBuilder($query)
    {
        return new PhotoBuilder($query); // TODO: Change the autogenerated stub
    }

    /***
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function user()
    {
        return $this->belongsTo(User::class,'user_id','id');
    }

    public function beforeSave($model)
    {
        $this->user_name = $model->user->name;
        parent::beforeSave($model); // TODO: Change the autogenerated stub
    }
}
